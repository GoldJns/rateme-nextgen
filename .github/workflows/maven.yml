# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["main", "feature/**"]
    paths-ignore:
      - "*.md"
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file rateme/pom.xml

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Generate and set version
        run: |
          version=$(echo "v$(git tag -l --sort=-version:refname | head -n 1)")
          echo "Setting version to $version in pom.xml"
          mvn versions:set -DnewVersion=$version

      - name: Commit version change
        run: |
          git add pom.xml
          git commit -m "Bump version to $version"
          git push

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: $version
          release_name: Release $version
          body: |
            Release $version

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: target/my-app.jar
